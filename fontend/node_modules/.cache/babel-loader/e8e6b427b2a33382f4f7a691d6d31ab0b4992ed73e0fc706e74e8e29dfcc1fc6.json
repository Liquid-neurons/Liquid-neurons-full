{"ast":null,"code":"var _jsxFileName = \"/Users/casarulez/Projects/Image-tagging/yolo-cv2/Liquid-neurons-full/fontend/src/components/gallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport anno from '../annotated_image.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Gallery = props => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [annotatedImage, setAnnotatedImage] = useState(null);\n  const [count, setCount] = useState(null);\n  const [isCameraStarted, setIsCameraStarted] = useState(false);\n  const toggleCamera = () => {\n    if (!isCameraStarted) {\n      startCamera();\n    } else {\n      takePicture();\n    }\n  };\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setIsCameraStarted(true);\n    }).catch(err => console.error('Error accessing the camera:', err));\n  };\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n\n    // Set canvas dimensions to match video dimensions\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current frame of the video onto the canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas image to base64 data URL\n    const image = canvas.toDataURL('image/jpeg');\n\n    // Set the captured image in state\n    setCapturedImage(image);\n\n    // Call the function to send the image to the backend\n    sendImageToBackend(image);\n  };\n  const uploadPicture = uploadedImageFile => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const image = new Image();\n\n    // Load the uploaded image file into an image object\n    image.onload = function () {\n      // Set canvas dimensions to match image dimensions\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      // Draw the uploaded image onto the canvas\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n      // Convert canvas image to base64 data URL\n      const imageData = canvas.toDataURL('image/jpeg');\n\n      // Set the captured image in state\n      setCapturedImage(imageData);\n\n      // Call the function to send the image to the backend\n      sendImageToBackend(imageData);\n    };\n\n    // Set the source of the image object to the uploaded image file\n    image.src = URL.createObjectURL(uploadedImageFile);\n  };\n  const handleUpload = event => {\n    const uploadedImageFile = event.target.files[0];\n    if (uploadedImageFile) {\n      uploadPicture(uploadedImageFile);\n    }\n  };\n  const sendImageToBackend = async image => {\n    try {\n      // Send the base64 URL to the backend\n      const response = await axios.post('http://127.0.0.1:5000/upload', {\n        image: image\n      }, {\n        mode: 'no-cors'\n      });\n      console.log('Image sent to the backend successfully:', response.data);\n\n      // Set the annotated image URL in state\n      setAnnotatedImage(response.data.annotatedImagePath);\n      setCount(response.data.count);\n\n      // console.log(\"Annotated Image:\",annotatedImage);\n      // console.log(\"Count:\", count);\n    } catch (error) {\n      console.error('Error sending image to the backend:', error);\n      // Optionally, handle the error\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"portfolio\",\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Industrial pipe counting using AI for inventory and invoice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: 640,\n            height: 480,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraStarted ? \"Capture Image\" : \"Start Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: uploadPicture,\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleUpload,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Captured Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: capturedImage,\n          alt: \"Captured\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), annotatedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Annotated image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: anno,\n          alt: \"Annotated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Pipe count: \", count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"QlKiU4U1li/NkQKUTdjyzTib03w=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useRef","useState","useEffect","axios","anno","Gallery","props","videoRef","canvasRef","capturedImage","setCapturedImage","annotatedImage","setAnnotatedImage","count","setCount","isCameraStarted","setIsCameraStarted","toggleCamera","startCamera","takePicture","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","image","toDataURL","sendImageToBackend","uploadPicture","uploadedImageFile","Image","onload","imageData","src","URL","createObjectURL","handleUpload","event","target","files","response","post","mode","log","data","annotatedImagePath","display"],"sources":["/Users/casarulez/Projects/Image-tagging/yolo-cv2/Liquid-neurons-full/fontend/src/components/gallery.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport anno from '../annotated_image.jpg';\n\n\nexport const Gallery = (props) => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [annotatedImage, setAnnotatedImage] = useState(null);\n  const [count, setCount] = useState(null);\n  const [isCameraStarted, setIsCameraStarted] = useState(false);\n\n\n  const toggleCamera = () => {\n    if (!isCameraStarted) {\n      startCamera();\n    } else {\n      takePicture();\n    }\n  };\n\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        setIsCameraStarted(true);\n      })\n      .catch((err) => console.error('Error accessing the camera:', err));\n  };\n\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n\n    // Set canvas dimensions to match video dimensions\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw the current frame of the video onto the canvas\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n    // Convert canvas image to base64 data URL\n    const image = canvas.toDataURL('image/jpeg');\n\n    // Set the captured image in state\n    setCapturedImage(image);\n\n    // Call the function to send the image to the backend\n    sendImageToBackend(image);\n  };\n\n  const uploadPicture = (uploadedImageFile) => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const image = new Image();\n\n    // Load the uploaded image file into an image object\n    image.onload = function() {\n        // Set canvas dimensions to match image dimensions\n        canvas.width = image.width;\n        canvas.height = image.height;\n\n        // Draw the uploaded image onto the canvas\n        context.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n        // Convert canvas image to base64 data URL\n        const imageData = canvas.toDataURL('image/jpeg');\n\n        // Set the captured image in state\n        setCapturedImage(imageData);\n\n        // Call the function to send the image to the backend\n        sendImageToBackend(imageData);\n    };\n\n    // Set the source of the image object to the uploaded image file\n    image.src = URL.createObjectURL(uploadedImageFile);\n};\n\nconst handleUpload = (event) => {\n  const uploadedImageFile = event.target.files[0];\n  if (uploadedImageFile) {\n      uploadPicture(uploadedImageFile);\n  }\n};\n\n  const sendImageToBackend = async (image) => {\n    try {\n      // Send the base64 URL to the backend\n      const response = await axios.post('http://127.0.0.1:5000/upload', { image: image }, { mode: 'no-cors' });\n      console.log('Image sent to the backend successfully:', response.data);\n\n      // Set the annotated image URL in state\n      setAnnotatedImage(response.data.annotatedImagePath);\n      setCount(response.data.count);\n      \n      // console.log(\"Annotated Image:\",annotatedImage);\n      // console.log(\"Count:\", count);\n\n    } catch (error) {\n      console.error('Error sending image to the backend:', error);\n      // Optionally, handle the error\n    }\n  };\n\n\n  \n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Demo</h2>\n          <p>Industrial pipe counting using AI for inventory and invoice.</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"demo\">\n            <video ref={videoRef} autoPlay />\n            <canvas ref={canvasRef} width={640} height={480} style={{ display: \"none\" }} />\n          </div>\n          <button onClick={toggleCamera}>{isCameraStarted ? \"Capture Image\" : \"Start Camera\"}</button>\n          <button onClick={uploadPicture}>Upload Image</button>\n            <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handleUpload}\n                style={{ display: 'none' }}\n            />\n        </div>\n        {capturedImage && (\n          <div>\n            <h3>Captured Image</h3>\n            <img src={capturedImage} alt=\"Captured\" />\n          </div>\n        )}\n        {annotatedImage && (\n          <div>\n            <h3>Annotated image</h3>\n            <img src={anno} alt=\"Annotated\" />\n            <p><h1>Pipe count: {count}</h1></p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}