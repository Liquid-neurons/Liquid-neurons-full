{"ast":null,"code":"var _jsxFileName = \"/Volumes/Harish/Projects/React-Landing-Page-Template/src/components/gallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Gallery = props => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isCameraStarted, setIsCameraStarted] = useState(false);\n  const toggleCamera = () => {\n    if (!isCameraStarted) {\n      startCamera();\n    } else {\n      takePicture();\n    }\n  };\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setIsCameraStarted(true);\n    }).catch(err => console.error('Error accessing the camera:', err));\n  };\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const image = canvas.toDataURL('image/jpeg'); // Convert canvas image to base64 data URL\n    // Decode base64 data\n    const byteCharacters = atob(image.split(',')[1]);\n    const byteNumbers = new Array(byteCharacters.length);\n    for (let i = 0; i < byteCharacters.length; i++) {\n      byteNumbers[i] = byteCharacters.charCodeAt(i);\n    }\n    const byteArray = new Uint8Array(byteNumbers);\n    const blob = new Blob([byteArray], {\n      type: 'image/jpeg'\n    });\n\n    // Create blob URL for the JPEG image\n    const imageUrl = URL.createObjectURL(blob);\n    console.log(imageUrl);\n\n    // Now `imageUrl` contains the URL for the JPEG image\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"portfolio\",\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Industrial pipe counting using AI for inventory and invoice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: 640,\n            height: 640,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleCamera,\n          children: isCameraStarted ? \"Capture Image\" : \"Start Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Annotated Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${capturedImage}`,\n            alt: \"Annotated\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"RG3jDR5VVGLgc/M6RkZRjVHakVY=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useRef","useState","Gallery","props","videoRef","canvasRef","capturedImage","setCapturedImage","isCameraStarted","setIsCameraStarted","toggleCamera","startCamera","takePicture","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","canvas","image","toDataURL","byteCharacters","atob","split","byteNumbers","Array","length","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","imageUrl","URL","createObjectURL","log","display"],"sources":["/Volumes/Harish/Projects/React-Landing-Page-Template/src/components/gallery.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nexport const Gallery = (props) => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isCameraStarted, setIsCameraStarted] = useState(false);\n\n  const toggleCamera = () => {\n    if (!isCameraStarted) {\n      startCamera();\n    } else {\n      takePicture();\n    }\n  };\n\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        setIsCameraStarted(true);\n      })\n      .catch((err) => console.error('Error accessing the camera:', err));\n  };\n  const takePicture = () => {\n    const canvas = canvasRef.current;\n    const image = canvas.toDataURL('image/jpeg'); // Convert canvas image to base64 data URL\n     // Decode base64 data\n  const byteCharacters = atob(image.split(',')[1]);\n  const byteNumbers = new Array(byteCharacters.length);\n  for (let i = 0; i < byteCharacters.length; i++) {\n    byteNumbers[i] = byteCharacters.charCodeAt(i);\n  }\n  const byteArray = new Uint8Array(byteNumbers);\n  const blob = new Blob([byteArray], { type: 'image/jpeg' });\n\n  // Create blob URL for the JPEG image\n  const imageUrl = URL.createObjectURL(blob);\n  console.log(imageUrl);\n\n  // Now `imageUrl` contains the URL for the JPEG image\n  };\n\n\n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Demo</h2>\n          <p>Industrial pipe counting using AI for inventory and invoice.</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"demo\">\n            <video ref={videoRef} autoPlay />\n            <canvas ref={canvasRef} width={640} height={640} style={{ display: \"none\" }} />\n          </div>\n          <button onClick={toggleCamera}>{isCameraStarted ? \"Capture Image\" : \"Start Camera\"}</button>\n          {capturedImage && (\n            <div>\n            <h3>Annotated Image</h3>\n            <img src={`data:image/jpeg;base64,${capturedImage}`} alt=\"Annotated\" />\n          </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}