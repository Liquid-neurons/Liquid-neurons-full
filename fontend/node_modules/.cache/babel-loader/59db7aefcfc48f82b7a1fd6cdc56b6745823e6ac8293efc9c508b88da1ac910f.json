{"ast":null,"code":"var _jsxFileName = \"/Volumes/Harish/Projects/React-Landing-Page-Template/src/components/gallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Gallery = props => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isStreaming, setIsStreaming] = useState(false);\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      videoRef.current.srcObject = stream;\n      setIsStreaming(true);\n    }).catch(err => console.error('Error accessing the camera:', err));\n  };\n  const stopCamera = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n    tracks.forEach(track => track.stop());\n    setIsStreaming(false);\n  };\n  const takePicture = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 640, 480);\n    const image = canvasRef.current.toDataURL('image/jpeg');\n    setCapturedImage(image);\n    stopCamera(); // Stop the camera after capturing the image\n  };\n\n  const recapture = () => {\n    setCapturedImage(null); // Clear the captured image\n    startCamera(); // Start the camera again for recapture\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"portfolio\",\n    className: \"text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Demo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Industrial pipe counting using AI for inventory and invoice.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"demo\",\n          children: [isStreaming && /*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            width: 640,\n            height: 480,\n            style: {\n              display: isStreaming ? \"none\" : \"block\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), !capturedImage && isStreaming && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: takePicture,\n          children: \"Capture Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), capturedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Captured Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: capturedImage,\n            alt: \"Captured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: recapture,\n            children: \"Recapture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"J0kjd33S4uU5z/4BCOjzzQTeP5o=\");\n_c = Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["React","useRef","useState","Gallery","props","videoRef","canvasRef","capturedImage","setCapturedImage","isStreaming","setIsStreaming","startCamera","navigator","mediaDevices","getUserMedia","video","then","stream","current","srcObject","catch","err","console","error","stopCamera","tracks","getTracks","forEach","track","stop","takePicture","context","getContext","drawImage","image","toDataURL","recapture","display"],"sources":["/Volumes/Harish/Projects/React-Landing-Page-Template/src/components/gallery.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\nexport const Gallery = (props) => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [capturedImage, setCapturedImage] = useState(null);\n  const [isStreaming, setIsStreaming] = useState(false);\n\n  const startCamera = () => {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((stream) => {\n        videoRef.current.srcObject = stream;\n        setIsStreaming(true);\n      })\n      .catch((err) => console.error('Error accessing the camera:', err));\n  };\n\n  const stopCamera = () => {\n    const stream = videoRef.current.srcObject;\n    const tracks = stream.getTracks();\n    tracks.forEach((track) => track.stop());\n    setIsStreaming(false);\n  };\n\n  const takePicture = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, 640, 480);\n    const image = canvasRef.current.toDataURL('image/jpeg');\n    setCapturedImage(image);\n    stopCamera(); // Stop the camera after capturing the image\n  };\n\n  const recapture = () => {\n    setCapturedImage(null); // Clear the captured image\n    startCamera(); // Start the camera again for recapture\n  };\n\n  return (\n    <div id=\"portfolio\" className=\"text-center\">\n      <div className=\"container\">\n        <div className=\"section-title\">\n          <h2>Demo</h2>\n          <p>Industrial pipe counting using AI for inventory and invoice.</p>\n        </div>\n        <div className=\"row\">\n          <div className=\"demo\">\n            {isStreaming && (\n              <video ref={videoRef} autoPlay />\n            )}\n            <canvas ref={canvasRef} width={640} height={480} style={{ display: isStreaming ? \"none\" : \"block\" }} />\n          </div>\n          {!capturedImage && isStreaming && (\n            <button onClick={takePicture}>Capture Image</button>\n          )}\n          {capturedImage && (\n            <div>\n              <h3>Captured Image</h3>\n              <img src={capturedImage} alt=\"Captured\" />\n              <button onClick={recapture}>Recapture</button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}